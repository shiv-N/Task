@model RepositoryLayer.PaginatedList<RepositoryLayer.Entity.StudentCourse>

@{
    ViewData["Title"] = "Dashboard";
}

<h1>Dashboard</h1>

<p>
    <a asp-action="RegisterStudent">Create New</a>
</p>
<form asp-action="Dashboard" method="get">
    <div class="form-actions no-color">
        <p>
            Filter (Lastname/email) : <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-info mb-2" /> |
            <a asp-action="Dashboard">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                First Name
            </th>
            <th>
                <a asp-action="Dashboard" asp-route-sortOrder="@ViewData["NameSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Last Name
                </a>
            </th>
            <th>
                <a asp-action="Dashboard" asp-route-sortOrder="@ViewData["DateSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Enrollment Date
                </a>
            </th>
            <th>
                Email
            </th>
            <th>
                Courses
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Convert.ToDateTime(item.EnrollDate).ToString("dd/MM/yyyy")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailAddress)
                </td>
                <td>
                    @if (item.Courses.Count != 0)
                    {
                        @foreach (var Course in item.Courses)
                        {
                            <span class="badge badge-dark">@Course.CourseName</span>
                        }
                    }
                    else { 
                        <span class="badge badge-danger">NA</span>
                    }


                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.StudentId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.StudentId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.StudentId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}



<a asp-action="Dashboard"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Dashboard"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
